name: Sync Submodules

on:
  repository_dispatch:
    types: [submodule-update]
  workflow_dispatch:
  schedule:
    # Optional: Run every hour to check for updates
    - cron: "0 * * * *"

jobs:
  sync-submodules:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master repository
        uses: actions/checkout@v4
        with:
          ref: main # Force checkout main branch
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Determine default branch
        id: get_branch
        run: |
          # Get the current branch name
          CURRENT_BRANCH=$(git branch --show-current)
          echo "branch=${CURRENT_BRANCH}" >> $GITHUB_OUTPUT
          echo "Current branch: ${CURRENT_BRANCH}"

      - name: Update submodules (try both main and master)
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          git submodule foreach '
            echo "Processing submodule: $name"
            git fetch origin
            
            # Try main first, then master
            if git checkout main 2>/dev/null; then
              echo "Using main branch for $name"
              git pull origin main
            elif git checkout master 2>/dev/null; then
              echo "Using master branch for $name"
              git pull origin master
            else
              echo "Error: Neither main nor master branch found for $name"
              exit 1
            fi
          '

      - name: Check if there are changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "Auto-update submodules to latest commits"
          git push origin ${{ steps.get_branch.outputs.branch }}
